Attributes: Attributes are metadata that provide additional information about a resource. They can be used to describe properties, characteristics, or other relevant details of the resource.
// Attributes are typically used in HTML, XML, and other markup languages to enhance the functionality and semantics of elements.
// Attributes are defined within the opening tag of an element and consist of a name-value pair, where the name is the attribute name and the value is the assigned value.
// Attributes can be optional or required, depending on the element and its purpose.
// Attributes can be used to control the behavior, appearance, or functionality of an element.
// Attributes can be global, meaning they can be applied to any element, or specific to certain elements.
// Common global attributes include `class`, `id`, `style`, and `title`.
// Attributes can also be boolean, meaning they do not require a value and are either present or absent.
// For example, the `disabled` attribute can be used on form elements to indicate that they are not interactive.
// Attributes can be used to provide additional context or information about an element, such as `alt` for images or `href` for links.
// Attributes can be used to enhance accessibility by providing descriptive text for screen readers or other assistive technologies.

Syntax: Attribute_name="value"
// Example: `<img src="image.jpg" alt="Description of the image">`
// Example: `<a href="https://example.com" target="_blank">Link to Example</a>`
// Example: `<input type="text" name="username" required>`

Typres of Attributes:
// 1. Global Attributes: These attributes can be applied to any HTML element. Examples include `class`, `id`, `style`, and `title`.
// 2. Event Attributes: These attributes are used to handle events in HTML elements, such as `onclick`, `onmouseover`, and `onchange`.
// 3. Form Attributes: These attributes are used in form elements to control their behavior, such as `action`, `method`, and `enctype`.
// 4. Link Attributes: These attributes are used in anchor tags to define the behavior of links, such as `href`, `target`, and `rel`.
// 5. Image Attributes: These attributes are used in image tags to define the source and alternative text, such as `src`, `alt`, and `width`.
// 6. Input Attributes: These attributes are used in input fields to define their type and behavior, such as `type`, `name`, `value`, and `placeholder`.
// 7. Table Attributes: These attributes are used in table elements to define their structure and appearance, such as `border`, `cellpadding`, and `cellspacing`.
// 8. Media Attributes: These attributes are used in media elements like audio and video to define their behavior, such as `controls`, `autoplay`, and `loop`.
// 9. Style Attributes: These attributes are used to apply inline styles to elements, such as `style`, `color`, and `font-size`.
// 10. Data Attributes: These attributes are used to store custom data in HTML elements, allowing developers to attach additional information without affecting the standard attributes. They are prefixed with `data-`, such as `data-user-id` or `data-role`.
// 11. Boolean Attributes: These attributes do not require a value and are either present or absent. Examples include `disabled`, `checked`, and `readonly`. When present, they indicate a specific state or behavior of the element.
// 12. ARIA Attributes: These attributes are used to enhance accessibility by providing additional information about the roles and states of elements for assistive technologies. Examples include `aria-label`, `aria-hidden`, and `aria-expanded`.
// 13. Custom Attributes: These attributes are user-defined and can be used to store any additional information needed for a specific application. They are typically prefixed with `data-` to avoid conflicts with standard attributes, such as `data-custom-info` or `data-toggle`.
// 14. Language Attributes: These attributes are used to specify the language of the content within an element. The `lang` attribute is commonly used for this purpose, allowing developers to indicate the language of text content, such as `lang="en"` for English or `lang="fr"` for French.
// 15. Accessibility Attributes: These attributes are used to improve the accessibility of web content for users with disabilities. Examples include `role`, which defines the role of an element, and `tabindex`, which controls the tab order of focusable elements.
// 16. Scripting Attributes: These attributes are used to include scripts in HTML elements, such as `onload`, which executes a script when the element is loaded, or `onclick`, which executes a script when the element is clicked.
// 17. Meta Attributes: These attributes are used to provide metadata about the HTML document, such as `charset` for character encoding, `viewport` for responsive design, and `description` for SEO purposes. They are typically included in the `<head>` section of the document.
// 18. Link Relation Attributes: These attributes are used to define the relationship between the current document and other resources. The `rel` attribute is commonly used in `<link>` elements to specify the relationship, such as `rel="stylesheet"` for linking to a CSS file or `rel="icon"` for linking to a favicon.